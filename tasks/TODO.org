#+TITLE: List of items to complete

* emacs
** DONE Get any files titled 'TODO' to open automatically in org-mode
Just add ".org" to the end of the filename. I can also
look into how to do this without the extension)

** TODO Get at least this particular file to open automatically in auto-fill-mode (apparently it doesn't wrap text when in a bullet)
*** global-visual-line-mode is set to true in .spacemacs (in custom-set-variables).
*** Next step is to figure out which modes I don't want this enabled and disable it in those modes. The following modes should not have it enabled:
**** C++

** DONE Get any .cpp files to open in auto-fill-mode
Edit: Already seems to. Don't know what I was talking about before

** TODO Checkmarks/status
No clue what the status thing is...but I'll work on getting TODO items/checkboxes working here shortly

See file:~/Documents/git/programming-math/notes/emacs/orgmode.org

** TODO Notifications
There are a few applications that you can install on emacs that will allow you to send notifications to the desktop. I'm mostly interested in getting notifications on things like agenda items, but I'd also be interested to see what else there is out there.

Come to think of it, I don't know how much I will utilize this. I get enough notifications on my phone for calendar items and stuff.

** TODO Agenda
Eventually, I'll add my personal weekly goals to Emacs

** TODO mu4e
Again, not so much a TODO item, but I need to learn this addon a little better. I don't know how much I will be utilizing it though tbh. What I need to do is see what's out there and how people are utilizing it. I'm sure there are some great things that can be done with it.

** TODO backup lisp files
I need to start backing up my list files, including the ones in ~/emacs.d/custom/.  Everytime I lose a VM I need to recreate these files. I also need to study how these files work more closely.

Since using spacemacs, this isn't really necessary. I'll have to look into exactly what I'd need to backup to be able to make my configuration easy to move from one system to another.

** TODO helm
First of all, get a better understanding of all the major features. Second, try to figure out why it takes forever to load when typing 'C-x-f'

** TODO Auto install script
*** TODO Create a file that when run, installs all necessary files to be able to install all necessary files on a new OS
**** init.el file modified, we'll see if it works
**** Auto install the following files:
***** emacs, git, ...
**** Auto clone repo with emacs files (create /home/username/.emacs.d/ directory with init.el file and custom/ directory with setup-*.el files
* Programming
** Git
*** TODO Learn how to set up local repo to save authentication info
** C++
*** Misc
**** TODO Go through stackoverflow and look at some of the questions and figure out how the code that I don't understand works
I really should just delete this item. This is another ongoing thing that I'll be doing that's never really complete. I'll leave it here for now just as a reminder 

*** SDL
I don't think I'll really be utilzing SDL very much anymore. It has run it's course. It doesn't seem to be utilized much anywhere. I'll keep it here for now. Maybe I'll come back to it. 

Until then, I'll have my eyes on OpenGL. It'll be good to look at OpenGL anyway with all the computer graphics stuff I want to do

*** OpenGL
**** TODO Figure out how to center objects onto the screen
**** TODO Add a list of required libs necessary to run the program     
** Java
** Languages to learn
I'm not going to put TODO's next to these headings obviously. Learning a language is a process.

*** Clojure
*** Rust
*** Node.js

* Linux
** Commands
*** TODO chmod
*** TODO chgrp
*** TODO chown
*** TODO apt
**** apt-cache
**** apt
Find all useful apt commands. For instance, the command that allows
you to search for a package
** INSTALLING from source
*** TODO Holy cow, I have had so many issues with trying to install stuff. Usually, I just end up randomly installing stuff and I don't even know where it goes or how to fix it. I especially had alot of issues when I was trying to load a png file in my SDL test. I need to figure this stuff out so I can better debug issues in the future
This actually isn't that hard. If there's a configure file and a Makefile, it's usually just the following:

#+BEGIN_SRC
./configure
make
sudo make install
#+END_SRC

If it's got a CMakeLists.txt file in the root directory, it's usually just:

Optionally, create a build directory. From there you can run cmake
#+BEGIN_SRC
mkdir build
cd build/
cmake ..
make
#+END_SRC

Or, you can just run that all in the root directory without creating a build directory
#+BEGIN_SRC
cmake .
make
#+END_SRC

That's pretty much it for now.

When it comes to writing my own programs, I've found that using CMake is the easiest. There are several alternatives, including writing your own Makefile. I have found this option is annoyingly complex. I'm sure there are uses for it, but I don't have the knowledge or the time to look into it.
** OS errors
*** TODO Investigate how apport works. Possibly create a script to
autoremove all files in /var/crash/

** Email
*** TODO Create personal email server
Eventually consider creating my own personal email server. At the
time, the complexity outweighs the benefits
** Automation/Backups
*** TODO .emacs backup?
I don't want to have to put my .emacs on my github repo. I can, but
for the purposes I will be using it for, it will be annoying to have
to clone my repo everytime I want the file. Or just copy and paste the
file.

The solution for now will be to auto back it up every week or so to my NAS.
* Miscellaneous
** Internet
*** TODO Export Chrome bookmarks
Automatically import Chrome bookmarks to Firefox browser every
day, maybe less frequently.

